repositories:
  - name: aws-ebs-csi-driver
    url: https://kubernetes-sigs.github.io/aws-ebs-csi-driver
  - name: eks
    url: https://aws.github.io/eks-charts
  - name: external-dns
    url: https://kubernetes-sigs.github.io/external-dns
  - name: grafana
    url: https://grafana.github.io/helm-charts

{{ $domainName := default "tamasweb.com" (env "DOMAIN") }}
{{ $clusterName := default "demo-cluster" (env "CLUSTER_NAME") }}
{{ $awsAccountId := default "dummy_id" (env "AWS_ACCOUNT_ID") }}
{{ $acmArn := default "dummy_arn" (env "AWS_ACM_ARN") }}
{{ $awsEcrRepo := default "" (env "AWS_ECR_REPO") }}
{{ $dockerCreds := default "dummy_creds" (env "DOCKER_CREDS") }}

releases:
  - name: demo
    chart: ./helm/deploy_demo
    values:
      - ingress:
          annotations:
            alb.ingress.kubernetes.io/certificate_arn: {{ $acmArn }}
            external-dns.alpha.kubernetes.io/hostname: {{ $domainName }}
          domain: {{ $domainName }}
      - imagePullSecret:
          name: ecr-credentials
          value: {{ $dockerCreds | toJson }}
      - image:
          repository: {{ $awsEcrRepo }}
          tag: "deploy_demo_0.1"
              
  - name: aws-ebs
    namespace: kube-system
    chart: aws-ebs-csi-driver/aws-ebs-csi-driver
    values:
      - controller:
          serviceAccount:
            annotations: {
              "eks.amazonaws.com/role-arn": "arn:aws:iam::{{ $awsAccountId }}:role/iam_ebs_csi_role"
              }

  - name: aws-alb
    namespace: kube-system
    chart: eks/aws-load-balancer-controller
    values:
      - clusterName: {{ $clusterName }}
      - ingressClassParams:
          create: false
      - serviceAccount:
          name: aws-load-balancer-controller
          annotations: {
            "eks.amazonaws.com/role-arn": "arn:aws:iam::{{ $awsAccountId }}:role/iam_alb_controller_role"
            }

  - name: aws-route53
    namespace: kube-system
    chart: external-dns/external-dns
    values:
      - domainFilters:
          - {{ $domainName }}
      - serviceAccount:
          name: external-dns
          annotations: {
            "eks.amazonaws.com/role-arn": "arn:aws:iam::{{ $awsAccountId }}:role/iam_external_dns_role"
            }

  - name: loki
    namespace: monitoring
    chart: grafana/loki-stack
    values:
      - prometheus:
          enabled: true

  - name: grafana
    namespace: monitoring
    chart: grafana/grafana
    values:
      - service:
          port: 443
      - ingress:
          enabled: true
          hosts:
            - "grafana.{{ $domainName }}"
          ingressClassName: alb
          annotations:
            alb.ingress.kubernetes.io/certificate_arn: {{ $acmArn }}
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
            alb.ingress.kubernetes.io/scheme: internet-facing
            alb.ingress.kubernetes.io/target-type: ip
            external-dns.alpha.kubernetes.io/hostname: "grafana.{{ $domainName }}"
            alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
            alb.ingress.kubernetes.io/group.name: "aws-alb"
      - "./grafana/grafana_config.yaml"
